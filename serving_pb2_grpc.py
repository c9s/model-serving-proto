# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import serving_pb2 as serving__pb2


class ShapeDetectionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Detect = channel.unary_unary(
        '/inference.ShapeDetection/Detect',
        request_serializer=serving__pb2.DetectionRequest.SerializeToString,
        response_deserializer=serving__pb2.DetectionResponse.FromString,
        )


class ShapeDetectionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Detect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ShapeDetectionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Detect': grpc.unary_unary_rpc_method_handler(
          servicer.Detect,
          request_deserializer=serving__pb2.DetectionRequest.FromString,
          response_serializer=serving__pb2.DetectionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'inference.ShapeDetection', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ObjectDetectionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Detect = channel.unary_stream(
        '/inference.ObjectDetection/Detect',
        request_serializer=serving__pb2.DetectionRequest.SerializeToString,
        response_deserializer=serving__pb2.Object.FromString,
        )


class ObjectDetectionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Detect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ObjectDetectionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Detect': grpc.unary_stream_rpc_method_handler(
          servicer.Detect,
          request_deserializer=serving__pb2.DetectionRequest.FromString,
          response_serializer=serving__pb2.Object.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'inference.ObjectDetection', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
